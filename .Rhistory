data1 = read.csv("femaleMiceWeight.csv")
data1 = read.csv("femaleMiceWeights.csv")
data1 <- read.csv("femaleMiceWeights.csv")
setwd("C:/Users/renat/OneDrive/Escritorio/CS50/Statistics and R/Datasets")
data1 <- read.csv("femaleMiceWeights.csv")
setwd("C:/Users/renat/OneDrive/Escritorio/CS50/Statistics and R")
data1 <- read.csv("femaleMiceWeights.csv")
RNGkind()
view(data1)
View(data1)
head(data1)
nombreColumnaWeight = names(data1[,2])
print(nombreColumnaWeight)
nombreColumnaWeight = names(data1)
print(nombreColumnaWeight)
nombres_Columnas = names(data1)
print(nombreColumnaWeight)
print(nombres_Columnas)
SegundaColumna = data1[,2]
View(SegundaColumna)
SegundaColumna = data.frame(data1[,2])
View(SegundaColumna)
View(SegundaColumna)
Fila12Columna2 = data.frame(data1[12,2])
print(Fila12Columna2)
Fila12Columna2 = data1[12,2]
print(Fila12Columna2)
WeightColumna = data1$Bodyweight
View(WeightColumna)
WeightColumna = data.frame(data1$Bodyweight)
View(WeightColumna)
Valor11thFila = WeightColumna[11,]
print(Valor11thFila)
length(data1)
length(data1)
length(data1$Diet)
vector_hf <- data1$Diet
print(vector_hf)
vector_hf <- data.frame(data1$Diet)
print(vector_hf)
vector_hf <-
namehf = "hf"
vector_hf <-
namehf <- "hf"
vector_pesohf = data1$Bodyweight[data1$Diet == "hf"]
print(vector_pesohf)
promedio_vectorpesohf = mean(vector_pesohf)
promedio_vectorpesohf
?sample
?mean
?sample
#Definicion de funcion
?sample
vectorx = 13:24
vectorx
vectorx = sample(13:24, 1)
vectorx
set.seed(1)
?set.seed
vectorx = sample(13:24, set.seed(1))
vectorx
vectorx = sample(13:24, 1)
set.seed(1)
vectorx = sample(13:24, 1)
vectorx
w = data1$Bodyweight[vectorx]
w
install.packages("dplyr")
library("dplyr")
datachow = filter(data1, Diet=="chow")
datachow
datachow_body = select(datachow, Bodyweight)
datachow_body
datachow_body = select(datachow, Bodyweight == "21.51")
?filter
?select
datachow = filter(data1, Diet=="chow") #Funcion de filtro, primer el dataset, luego el filtro
datachow
datachow_body = select(datachow, Bodyweight) #dataset y el nombre de la columna que se quiere seleccionar
datachow_body
unlist(datachow_body)
datachow_body
unlist(datachow_body)
datachowdefinitivo = filter(data1, Diet == "chow") %>% select(Bodyweight) %>% unlist
datachowdefinitivo
mean(datachow_body)
mean(datachowdefinitivo)
datachow_body
unlist(datachow_body)
mean(unlist(datachow_body))
data2 = read.csv("msleep_ggplot2.csv")
read.csv(data2)
class(read.csv(data2))
class(read.csv(data2))
data2 = read.csv("msleep_ggplot2.csv")
data2
read.csv("msleep_ggplot2.csv")
read.csv("msleep_ggplot2.csv")
class(read.csv("msleep_ggplot2.csv"))
datap = filter(data2, order == "Primates")
datap
count.fields(datap)
count(datap)
class(filter(data2, order == "Primates"))
class(datap)
datapp = select(datap, sleep_total)
datapp
class(datapp)
mean(unlist(datapp))
summarise(datap)
summarise(datapp)
summarize(datapp)
summarise(data2)
summarise(data2)
summarize(data2)
summary(data2)
summary(datapp)
library("UsingR")
datax = father.son$fheight
datax
sample(datax, 20)
dataxx = round(sample(datax, 20),1)
dataxx = round(sample(datax, 20),1) #20 valores aleatorios y redondeados a 1 digito
dataxx
hist(datax, breaks = seq(floor(min(datax), ceiling(max(datax)))))
hist(datax, breaks = seq(floor(min(datax)), ceiling(max(datax)))))
hist(datax, breaks = seq(floor(min(datax)), ceiling(max(datax))))
seq(floor(min(datax)), ceiling(max(datax)))
dataxs = seq(floor(min(datax)), ceiling(max(datax)), 0.1)
plot(dataxs, ecdf(datax)(dataxs), typle="l")
datax
summary(datax)
sd(datax)
mean(datax > 70)
1 - pnorm(70, mean(datax), sd(datax))
1 - pnorm(70, mean(datax), sd(datax)) #Este codigo nos da la aproximacion por una funcion normal de los datos
qqnorm(datax)
qqline(datax)
plot(funcion_normal, quantiles, xlab="Normal Percentiles", ylab="Height Percentiles")
percentiles = seq(0.01, 0.99, 0.01)
quantiles = quantile(datax, percentiles)
funcion_normal = qnorm(percentiles, mean(datax), sd(datax))
plot(funcion_normal, quantiles, xlab="Normal Percentiles", ylab="Height Percentiles")
abline(0,1)
load("skew.RData")
dim(dat)
par(mfrow = c(3,3))
par(mfrow = c(3,3))
dim(dat)
View(Skew)
load("C:/Users/renat/OneDrive/Escritorio/CS50/Statistics and R/skew.RData")
View(Skew)
load("skew.RData")
dim(dat)
qqnorm(dat)
par(mfrow = c(3,3))
for (i in 1:9) {
qqnorm(dat[,i])
}
par(mfrow=c(1,1))
for (i in 1:9) {
qqnorm(dat[,i])
}
par(mfrow=c(3,3))
for (i in 1:9) {
qqnorm(dat[,i])
}
View(dat)
qqnorm(dat$V4)
qqnorm(dat[,4])
par(mfrow=c(1,1))
qqnorm(dat[,4])
hist(exec.pay)
qqnorm(exec.pay)
qqline(exec.pay)
boxplot(exec.pay)
boxplot(exec.pay, ylab="10,000s of dollars", ylim=c(0,400))
mean(exec.pay)
median(exec.pay)
#----------
head(InsectSprays)
boxplot(split(values, factor))
?split
?split
boxplot(split(InsectSprays, mean(InsectSprays)))
boxplot(split(InsectSprays, list(InsectSprays$count, InsectSprays$spray)))
boxplot(split(unlist(InsectSprays), list(InsectSprays$count, InsectSprays$spray)))
boxplot(split(unlist(InsectSprays$count), list(InsectSprays$count, InsectSprays$spray)))
boxplot(unlist(InsectSprays$count) ~ list(InsectSprays$count, InsectSprays$spray))
boxplot(unlist(InsectSprays$count) ~ list(InsectSprays$count, InsectSprays$spray))
boxplot(unlist(InsectSprays$count) ~ list(InsectSprays$spray))
boxplot(unlist(InsectSprays$count) ~ (InsectSprays$spray))
View(InsectSprays)
boxplot(split(unlist(InsectSprays$count), InsectSprays$spray))
boxplot(split(unlist(InsectSprays$count), InsectSprays$spray))
boxplot(unlist(InsectSprays$count) ~ (InsectSprays$spray))
boxplot(split(unlist(InsectSprays$count), InsectSprays$spray))
library(dplyr)
data3 = data("nym.2002")
data3
View(data3)
data3 = data(nym.2002, package = "UsingR")
View(data3)
library(dplyr)
data3 = data(nym.2002, package = "UsingR")
data3
nym.2002
View(nym.2002)
hist(exec.pay)
qqnorm(exec.pay)
qqline(exec.pay)
hist(nym.2002)
?hist
hist(nym.2002, gender == "Male")
hist(nym.2002, nym.2002$gender == "Male")
hist(nym.2002, nym.2002$gender)
hist(nym.2002, nym.2002$gender)
hist(nym.2002)
data_nym = nym.2002[nym.2002$gender == "Male"]
data_nym = nym.2002[nym.2002$gender == "Male"]
View(nym.2002)
data2 = read.csv("msleep_ggplot2.csv")
data2
datap = filter(data2, order == "Primates")
datap
data_nym = filter(nym.2002, gender == "Male")
data_nym
View(data_nym)
data_nymMale = filter(nym.2002, gender == "Male")
View(data_nymMale)
data_nymFemale = filter(nym.2002, gender == "Female")
View(data_nymFemale)
hist(data_nymFemale)
hist(data_nymMale)
hist(data_nymFemale)
hist(data_nymMale)
hist(data_nymFemale)
hist(data_nymMale)
hist(data_nymMale)
hist(data_nymFemale)
hist(data_nymMale)
boxplot(unlist(data_nymMale$time) ~ (data_nymFemale$time))
boxplot(unlist(data_nymMale$time) ~ (data_nymMale$place))
boxplot(unlist(data_nymFemale$time) ~ (data_nymFemale$place))
qqnorm(data_nymMale)
qqnorm(data_nymMale$time)
qqnorm(data_nymFemale$time)
abline(0,1)
qqline(data_nymFemale)
qqnorm(data_nymFemale$time)
qqline(data_nymFemale)
qqnorm(data_nymFemale$time)
qqline(data_nymFemale$time)
qqnorm(data_nymFemale$time)
qqnorm(data_nymMale$time)
boxplot(unlist(data_nymMale$time) ~ (data_nymMale$place))
boxplot(unlist(data_nymFemale$time) ~ (data_nymFemale$place))
boxplot(unlist(data_nymMale$time) ~ (data_nymMale$place))
hist(data_nymFemale)
hist(data_nymFemale$time)
hist(data_nymMale$time)
hist(data_nymFemale$time)
hist(data_nymMale$time)
hist(data_nymFemale$time)
hist(data_nymMale$time)
hist(data_nymFemale$time)
hist(data_nymMale$time)
hist(data_nymFemale$time)
hist(data_nymMale$time)
hist(data_nymFemale$time, data_nymMale$time)
hist(data_nymFemale$time)
hist(data_nymMale$time)
hist(data_nymFemale$time)
boxplot(unlist(data_nymMale$time) ~ (data_nymMale$place))
boxplot(unlist(data_nymMale$time) ~ (nym.2002$gender == "Male"))
boxplot(unlist(data_nymMale$time) ~ (data_nymMale$age))
boxplot(unlist(nym.2002$time) ~ (nym.2002$gender))
median(data_nymFemale$time)
median(data_nymMale$time)
summary(data_nymMale)
summary(data_nymFemale)
hist(data_nymFemale$time)
boxplot(unlist(nym.2002$time) ~ (nym.2002$gender))
boxplot((nym.2002$time) ~ (nym.2002$gender))
qqnorm(data_nymMale$time)
qqline(data_nymMale$time)
qqnorm(data_nymFemale$time)
qqline(data_nymFemale$time)
qqnorm(data_nymMale$time) %>% qqline(data_nymMale$time) %>% qqnorm(data_nymFemale$time) %>% qqline(data_nymFemale$time)
qqnorm(data_nymMale$time)
qqline(data_nymMale$time)
qqnorm(data_nymFemale$time)
qqline(data_nymFemale$time)
pnorm(data_nymMale$time)
qqnorm(data_nymMale$time)
qqline(data_nymMale$time)
qqnorm(data_nymFemale$time)
qqline(data_nymFemale$time)
boxplot((nym.2002$time) ~ (nym.2002$gender))
median(data_nymFemale$time)
summary(data_nymMale)
qqnorm(data_nymMale$time)
summary(data_nymFemale)
hist(data_nymFemale$time)
hist(data_nymMale$time)
hist(data_nymFemale$time)
hist(data_nymMale$time)
hist(data_nymMale$time)
hist(data_nymFemale$time)
hist(data_nymMale$time)
rest_male = ks.test(data_nymMale, "pnorm")
rest_male = ks.test(data_nymMale$time, "pnorm")
rest_male
rest_female = ks.test(data_nymFemale$time, "pnorm")
rest_female
cat("Prueba de Kolmogorov-Smirnov de una muestra:\n")
cat("Estadístico D =", rest_male$statistic, "\n")
cat("Valor p =", rest_male$p.value, "\n")
cat("Hipótesis alternativa:", rest_male$alternative, "\n")
rest_female = ks.test(data_nymFemale$time, "pnorm")
boxplot((nym.2002$time) ~ (nym.2002$gender))
median(data_nymFemale$time)
summary(data_nymMale)
boxplot(unlist(data_nymMale$time) ~ (data_nymMale$age))
boxplot((nym.2002$time) ~ (nym.2002$gender))
boxplot(unlist(data_nymFemale$time) ~ (data_nymFemale$place))
hist(data_nymFemale$time)
qqnorm(data_nymFemale$time)
qqline(data_nymFemale$time)
qqnorm(data_nymMale$time)
qqline(data_nymMale$time)
